cmake_minimum_required(VERSION 3.12)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
include(GenerateTargetTriplet)
if(NOT DEFINED PKG_TARGET_TRIPLET)
    GENERATE_TARGET_TRIPLET()
endif()
project(NetCalc)
if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${PKG_TARGET_TRIPLET}/$<$<CONFIG:Debug>:debug/>bin")
endif()
if(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${PKG_TARGET_TRIPLET}/$<$<CONFIG:Debug>:debug/>bin")
endif()
if(NOT CMAKE_ARCHIVE_OUTPUT_DIRECTORY)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${PKG_TARGET_TRIPLET}/$<$<CONFIG:Debug>:debug/>lib")
endif()

set (MY_OS "unk")
if (MSVC)
    set (MY_OS "win")
    add_compile_options(-W3)
elseif (APPLE)
    set (MY_OS "osx")
    add_compile_options(-Wall -Wextra -pedantic)
elseif (UNIX)
    set (MY_OS "unix")
    add_compile_options(-Wall -Wextra -Wno-misleading-indentation)
endif (MSVC)
set(CMAKE_CXX_STANDARD 14)
#find_package(fmt QUIET)
#if (fmt_FOUND)
#    message(STATUS "fmt package found")
#else()
#    message(WARNING "fmt package not found")
#endif()
include_directories("${CMAKE_CURRENT_SOURCE_DIR}/import/${MY_OS}/include")
link_directories("${CMAKE_CURRENT_SOURCE_DIR}/import/${MY_OS}/lib")
link_directories("${CMAKE_CURRENT_SOURCE_DIR}/import/${MY_OS}/bin")
add_subdirectory("src")

